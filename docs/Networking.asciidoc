# Networking in OpenQA

*This overview is valid only when using QEMU backend!*

Which networking type to use is controlled by the +NICTYPE+
variable. If unset or empty +NICTYPE+ defaults to +user+, ie qemu
user networking which requires no further configuration.

For more advanced setups or tests that require multiple jobs to be
in the same networking the TAP or VDE based modes can be used.

## Qemu user networking

With Qemu [user
networking](http://wiki.qemu.org/Documentation/Networking#User_Networking_.28SLIRP.29)
each jobs gets it's own isolated network with TCP and UDP routed to
the outside. DHCP is provided by qemu. The MAC address of the
machine can be controlled with the +NICMAC+ variable. If not set,
it's +52:54:00:12:34:56+.

## TAP based network

os-autoinst can connect qemu to *existing* TAP devices of the host system to
leverage advanced network setups provided by the host by setting +NICTYPE=tap+.

The TAP device to use can be configured with the +TAPDEV+ variable. If not set
defined, ist's automatically set to "tap" + ($worker_instance - 1), i.e.
worker1 uses tap0, worker 2 uses tap1 and so on.

MAC address of virtual NIC is controlled by +NICMAC+ variable or
automatically computed from $worker_id if not set.

In TAP mode the system administrator is expected to configure the
network, required internet access etc on the host manually.

TAP devices need be owned by the +_openqa-worker+ user for openQA to
be able to access them.

[source, bash]
---------------
tunctl -u _openqa-worker -p -t tap0
---------------
or Wicked way:
[source, xml]
---------------
<!-- /etc/wicked/ifconfig/tap0.xml -->
<interface>
  <name>tap0</name>
  <tap>
    <owner>_openqa-worker</owner>
  </tap>
</interface>
---------------

## VDE based network

Virtual Distributed Ethernet provides a software switch that runs in
user space. It allows to connect several qemu instances without
affecting the system's network configuration.

The openQA workers need a vde_switch instance running. The workers
reconfigure the switch as needed by the job.

### Basic, single machine tests

To start with a basic configuration like qemu user mode networking,
create a machine with the following settings:

- +VDE_SOCKETDIR=/run/openqa+
- +NICTYPE=vde+
- +NICVLAN=0+

Start switch and user mode networking:

[source, bash]
---------------
systemctl start openqa-vde_switch
systemctl start openqa-slirpvde
---------------

With this setting all jobs on the same host would be in the same
network share the same SLIRP instance though.

### Multi machine tests

Create a machine like above but don't set +NICVLAN+. openQA will
dynamically allocate a VLAN number for all jobs that have
dependencies between each other. By default this VLAN is private and
has no internet access. To enable user mode networking set
+VDE_USE_SLIRP=1+ on one of the machines. The worker running the job
on such a machine will start slirpvde and put it in the correct VLAN
then.
