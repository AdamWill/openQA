#!/bin/bash -e

usage() {
    cat << EOF
Usage:
 tidy [--check] [--only-changed]

Options:
 -h, -?, --help       display this help
 -c, --check          Only check for style check differences
 -o --only-changed    Only tidy files with uncommited changes in git. This can
                      speed up execution a lot.

perltidy rules can be found in .perltidyrc
EOF
    exit
}

set -o pipefail

check=
only_changed=
opts=$(getopt -o hco --long help,check,only-changed -n 'parse-options' -- "$@") || usage
eval set -- "$opts"
while true; do
  case "$1" in
    -h | --help ) usage; shift ;;
    -c | --check ) check=true; shift ;;
    -o | --only-changed ) only_changed=true; shift ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

cleanup() {
    find . -name '*.tdy' -delete
}

trap cleanup EXIT

if ! command -v perltidy > /dev/null 2>&1; then
    echo "No perltidy found, install it first!"
    exit 1
fi

perltidy_version_found=$(perltidy -version | sed -n '1s/^.*perltidy, v\([0-9]*\)\s*$/\1/p')
perltidy_version_expected=$(sed -n "s/^.*Tidy[^0-9]*\([0-9]*\)['];$/\1/p" "${0%/*}/../cpanfile")
if [ "$perltidy_version_found" != "$perltidy_version_expected" ]; then
    echo "Wrong version of perltidy. Found '$perltidy_version_found', expected '$perltidy_version_expected'"
    exit 1
fi

find_changed_files() {
    changed_files=()
    for file in "${files[@]}"; do
        if ! [ $only_changed ] || [ "$(git diff --name-only "$file")" ]; then
            changed_files+=("$file")
        fi
    done
}

cd "${0%/*}/.." || exit 1

# just to make sure we are at the right location
test -e script/openqa || exit 1

cleanup

# .pc directory is used for "quilt" patch system (in Debian/Ubuntu)
# it contains pre-patched files and should be ignored
# shellcheck disable=SC2207
files=($(find . ! -path '*/.pc/*' ! -path './test-results/*' -type f \( -name '*.p[lm]' -o -name '*.t' \)) $(file --mime-type script/* | sed -n 's/^\(.*\):.*text\/x-perl.*$/\1/p'))
find_changed_files
# shellcheck disable=SC2128
[[ $changed_files ]] && perltidy --pro=.../.perltidyrc "${changed_files[@]}"

files=(script/{client,initdb,openqa,worker,upgradedb,load_templates,dump_templates,openqa-scheduler,openqa-websockets})
find_changed_files
# shellcheck disable=SC2128
[[ $changed_files ]] && perltidy "$TIDY_ARGS" "${changed_files[@]}"

while IFS= read -r -d '' file
do
    if diff -u "${file%.tdy}" "$file"; then
        continue
    fi
    if test -n "$check"; then
        echo "RUN tools/tidy script before checkin"
        exit 1
    else
        mv -v "$file" "${file%.tdy}"
    fi
done < <(find . -name "*.tdy" -print0)
