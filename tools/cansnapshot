#!/usr/bin/perl -w
# This code is Copyright 2010 Bernhard M. Wiedemann
# and is licensed under the GNU General Public License version 2 or later.
# http://www.gnu.org/licenses/gpl-2.0.html

# This code decides if a release is good enough to be snapshotted
# returning non-zero on failure

use strict;
use lib "/srv/www/cgi-bin/modules";
use awstandard;

# autodetect build number
my $buildnr;
for my $i (<factory-testing/iso/*.iso>) {
	$i=~m/-Build(\d{4})-Media\.iso$/;
	my $b=$1;
	if(!$buildnr) {$buildnr=$b}
	if($b ne $buildnr) {die "error: inconsistent build numbers '$b'!='$buildnr' in iso filenames"}
}
my $lastbuildnrfilename="/var/tmp/lastfactorysnapshotisobuildnr";
my $lastbuildnr=file_content($lastbuildnrfilename); chomp($lastbuildnr);
if($lastbuildnr && !-e "factory-tested/iso/openSUSE-NET-x86_64-Build$lastbuildnr-Media.iso") {die "ERROR: old iso not found - something strange here!"}
# should not re-snapshot as FTP tree could meanwhile have been updated
if($lastbuildnr==$buildnr) { exit 5 }

# check results
# having no * after buildnr means we ignore results from other desktops and RAID
# to have more snapshots
my $overalls=`tail -n 1 video/*-Build$buildnr.ogv.autoinst.txt`;

if($overalls=~m/overall: fail/) {
	exit 2; # fail
}
if($overalls!~m/overall: OK/) { # we want at least one OK
	exit 1; # fail
}

# here we are sure that we want a new snapshot

print "Build $buildnr autodetected as good to snapshot\n";
sleep 20; # last chance to hit Ctrl+C here
exit 0 # OK
