#!/usr/bin/perl -w
use strict;
use CGI qw":standard";
use Time::HiRes qw(sleep);
use JSON;
use FindBin;
use lib "$FindBin::Bin/modules";
use awstandard;
use openqa;

$| = 1;

$SIG{HUP} = sub { exit 0; };
$SIG{TERM} = sub { exit 0; };
$SIG{PIPE} = sub { exit 0; };

my $name=$ENV{PATH_INFO};

$name=~s/^\/(.*)/$1/;

my $basepath = running_log($name);

if($basepath eq '') {print header(-status=>404)."test not running"; exit 0; }

my $log = param('log') || '';
my $text = param('text') || '';

if($log eq 'current') {
	unless(-e $basepath.'currentstep') {print header(-status=>404)."test not running"; exit 0; }
	my (undef, $currentstep) = split(' ', file_content($basepath.'currentstep'));
	print header({-type=>"text/plain", Content_Encoding=>"none"});
	print $currentstep;
	exit;
}

elsif($log eq 'modlist') {
	my $results = test_result($name);
	my $modinfo = get_running_modinfo($results);
	unless(defined $modinfo) {print header(-status=>404)."test not running"; exit 0; }
	print header({-type=>"application/json", Content_Encoding=>"none"});
	my $html = '';
	foreach my $category (@{$modinfo->{'modlist'}}) {
		$html .= "<h2 class='box-subheader modcategory'>".$category->{'category'}."</h2>";
		$html .= "<ul class='navigation modcategory'>";
		foreach my $module (@{$category->{'modules'}}) {
			$html .= "<li class='mod-".$module->{'state'}."'>";
			$html .= "<a href='/tdata/show/$name/".$module->{'name'}."'>".$module->{'name'}."</a>";
			$html .= "</li>\n";
		}
		$html .= "</ul>\n\n";
	}
	my $json->{'modlist'} = $html;
	$json->{'running_state'} = running_state($name);
	print to_json($json);
	exit;
}

elsif($log eq 'modstat') {
	my $results = test_result($name);
	print header({-type=>"application/json", Content_Encoding=>"none"});
	my $modinfo = get_running_modinfo($results);
	delete $modinfo->{'modlist'};
	print to_json($modinfo);
	exit;
}

else {
	unless(-e $basepath.'currentautoinst-log.txt') {print header(-status=>404)."test not running"; exit 0; }
	#my $file=File::Tail->new($basepath.'currentautoinst-log.txt');
	alarm(7200);
	if ($text) {
		print header({-type=>"text/plain", Content_Encoding=>"none"});
	}
	else {
		print header({-type=>"text/html", Content_Encoding=>"none"});
		print "<style>pre { font-family: 'monospace', monospace; font-size: 12px; }</style><pre>";
	}
	system('tail', '-fn+0', $basepath.'currentautoinst-log.txt');
	exit;
}

