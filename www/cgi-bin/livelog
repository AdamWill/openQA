#!/usr/bin/perl -w
use strict;
use CGI qw":standard";
use Time::HiRes qw(sleep);
use lib "/srv/www/cgi-bin/modules";
use awstandard;
use openqa;

$| = 1;

$SIG{HUP} = sub { exit 0; };
$SIG{TERM} = sub { exit 0; };
$SIG{PIPE} = sub { exit 0; };

my $name=$ENV{PATH_INFO};

$name=~s/^\/(.*)/$1/;

my $basepath = running_log($name);

if($basepath eq '') {print header(-status=>404)."test not running"; exit 0; }

my $log = param('log') || '';
my $text = param('text') || '';


if($log eq 'current') {
	unless(-e $basepath.'currentstep') {print header(-status=>404)."test not running"; exit 0; }
	my (undef, $currentstep) = split(' ', file_content($basepath.'currentstep'));
	print header({-type=>"text/plain", Content_Encoding=>"none"});
	print $currentstep;
	exit;
}
elsif($log eq 'modlist') {
	unless(-e $basepath.'currentstep') {print header(-status=>404)."test not running"; exit 0; }
	my (undef, $currentstep) = split(' ', file_content($basepath.'currentstep'));
	print header({-type=>"text/html", Content_Encoding=>"none"});
	my $filecontent = file_content($basepath.'currentautoinst-log.txt') || '';
	my @modules = $filecontent=~m/^scheduling\s(\w+)\s.*\/(\w+)\.d\/.*\.pm$/gm;
	my $found = 0;
	unless ($currentstep and grep(/^$currentstep$/, @modules)) {
		$found = 1;
	}
	my @modlist;
	my $lastcatagory = '';
	cycle(1);
	first_run(1);
	foreach my $module (@modules) {
		if(cycle() eq 'even') {
			if($lastcatagory ne $module) {
				my $litem = pop(@modlist);
				push(@modlist, (first_run()?'':'</ul>')."<h2 class='box-subheader modcategory'>$module</h2><ul class='navigation modcategory'>");
				push(@modlist, $litem);
				$lastcatagory = $module;
			}
		}
		else {
			my $out;
			my $omod = $module;
			if ($found) {
				$out = 'todo';
			}
			elsif ($module=~m/^$currentstep$/) {
				$found = 1;
				$out = 'current';
				$omod = "<b>$module</b>";
			}
			else {
				$out = 'done';
			}
			push(@modlist, "<li class='mod-$out'><a href='/tdata/show/$name/$module'>$omod</a></li>");
		}
	}


	print join("\n", @modlist);
	print '</ul>';
	exit;
}

else {
	unless(-e $basepath.'currentautoinst-log.txt') {print header(-status=>404)."test not running"; exit 0; }
	#my $file=File::Tail->new($basepath.'currentautoinst-log.txt');
	alarm(7200);
	if ($text) {
		print header({-type=>"text/plain", Content_Encoding=>"none"});
	}
	else {
		print header({-type=>"text/html", Content_Encoding=>"none"});
		print "<style>pre { font-family: 'monospace', monospace; font-size: 12px; }</style><pre>";
	}
	system('tail', '-fn+0', $basepath.'currentautoinst-log.txt');
	exit;
}

