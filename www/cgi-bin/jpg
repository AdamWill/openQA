#!/usr/bin/perl -w
use strict;
use CGI ":standard";
BEGIN { $ENV{MAGICK_THREAD_LIMIT}=1; }
use Image::Magick;
use FindBin;
use lib "$FindBin::Bin/modules";
use awstandard;
use openqa;

my $p = new Image::Magick(depth=>8);
my $name=$ENV{PATH_INFO};
if($name=~m/\.\./) {print header(-status=>403)."invalid path"; exit 0; }
$name=~s/\.png$//;
my $fullname="$basedir/$prj/$name.png";
if (!-e $fullname) {print header(-status=>404)."file not found: ".$fullname; exit 0; }
$p->Read($fullname, depth=>8);

my $size=param("size");
if($size && $size=~m/^\d{1,3}x\d{1,3}$/) {
	$p->Resize($size); # make thumbnail
}

my $csize=param("csize");
if($csize && $csize=~m/^\d{1,3}x\d{1,3}$/) {
  my ($img_width,$img_height) = $p->Get('width','height');
  my ($width,$height) = split('x',$csize);
  my $ratio = $width / $height;
  my ($x,$y);
  if($ratio >= $img_width / $img_height) {
    $x = $img_width;
    $y = $img_width / $ratio;
  }
  else {
    $x = $img_height * $ratio;
    $y = $img_height;
  }
  $p->Crop($x.'x'.$y.'+0+0');
	$p->Resize($csize); # make thumbnail
}

my $fixsize=param("fixsize");
if($fixsize) {
	my $filesize = -s $fullname;
	my ($img_width,$img_height) = $p->Get('width','height');
	if($img_width < 800) {
		my $p2 = Image::Magick->new(depth=>8);
		$p2->Set(size=>'800x600');
		$p2->ReadImage("xc:black");
		$p2->Composite(image=>$p, compose=>'Over');
		$p=$p2;
	}
	elsif($img_width > 800) {
		$p->Resize('800x600');
	}
}

my $mtime=(stat($fullname))[9];
my $format="jpg";
if($ENV{REQUEST_URI}=~m/\.(\w{1,4})(\?.*)?$/) {$format=$1}

print header(-type=>"image/$format", -expires=>'+30m', -max_age=>'20000', -Last_Modified=>awstandard::HTTPdate($mtime)).
      $p->ImageToBlob(magick=>uc($format), depth=>8, quality=>80);

