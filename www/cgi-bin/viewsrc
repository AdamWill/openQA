#!/usr/bin/perl -w
use strict;
use CGI ":standard";
use FindBin;
use lib "$FindBin::Bin/modules";
use awstandard;
use openqa;
use Text::MicroTemplate "encoded_string";
use Text::MicroTemplate::Extended;

my $fn=$ENV{PATH_INFO};
if($fn=~m/\.\./) {print header(-status=>403)."invalid path"; exit 0; }
$fn=~s%^/%%;
my($action,$testname,$testmodule,$testindex) = split(/\//, $fn);

my $results = test_result($testname);
unless ($results) { print header(-status=>404)."no testresults found"; exit 0; }

my $module = test_result_module($results->{'testmodules'}, $testmodule);
unless ($module) { print header(-status=>404)."module not found"; exit 0; }

unless ($testindex =~ m/^\d+$/ && $testindex > 0 && $testindex <= @{$module->{'details'}}) {
	print header(-status=>403)."invalid index"; exit 0;
}
if($action!~m%^(?:show|raw)$%) {
	print header(-status=>404)."unknown action";
	exit 0;
}
my $modinfo = get_running_modinfo($results);

my $fqfn="$resultdir/$testname.ogv.autoinst.txt";
$fqfn = running_log($testname).'currentautoinst-log.txt' if ($modinfo->{'running'} ne "");
my $scriptpath=log_to_scriptpath($fqfn, $testmodule);
if(!$scriptpath || !-e $scriptpath) {
	$scriptpath||="";
	print header(-status=>404)."test not found: $testmodule $scriptpath"; exit 0
}

my $script=file_content($scriptpath);
if($action eq "raw") { print header(-type=>"text/plain").$script; exit 0}

my $nicescriptpath = $scriptpath;
$nicescriptpath=~s/^.*autoinst\///;

my $mt = Text::MicroTemplate::Extended->new(
	include_path  => ['../htdocs/template'],
	template_args => { testname => $testname, testmodule => $testmodule, testindex => $testindex,
			   action => 'viewsrc', modinfo => $modinfo, imglist => $module->{'details'},
			   scriptpath => $nicescriptpath, scriptsrc => $script },
);

print header(-charset=>"UTF-8", -type=>"text/html");
print $mt->render('viewsrc');
