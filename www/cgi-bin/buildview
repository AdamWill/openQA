#!/usr/bin/perl -w
use strict;
use CGI ":standard";
use FindBin;
use lib "$FindBin::Bin/modules";
use awstandard;
use sort_list;
use openqa;
use Text::MicroTemplate "encoded_string";
use Text::MicroTemplate::Extended;

# This tool is specific to openSUSE
# to enable the Release Team to see the quality at a glance

my $fn=$ENV{PATH_INFO};
if($fn=~m/\.\./) {print header(-status=>403)."invalid path"; exit 0; }
$fn=~s%^/%%;
my($build) = split(/\//, $fn);

my @configs=();
my %archs=();
my %results=();
my $now=time();
for my $r (<$resultdir/*>) {
	next unless -d $r;
	next unless -e "$r/autoinst-log.txt"; # Only finished tests
	my ($distri, $type, $arch, $b, $config)=split_filename($r);
	next if $build ne $b;

	my $testname = path_to_testname($r);
	my $result = test_result($testname);
	my $result_stats = test_result_stats($result);

	push(@configs, $config) unless ($config ~~ @configs); # manage xxx.0, xxx.1 (we only want the most recent one)
	$archs{$type} = [] unless $archs{$type};
	push(@{$archs{$type}}, $arch) unless ($arch ~~ @{$archs{$type}});

	$results{$config} = {} unless $results{$config};
	$results{$config}{$type} = {} unless $results{$config}{$type};
	my $overall = "fail";
	if (($result->{overall}||'') eq "ok") {
		$overall = ($result->{dents}) ? "unknown" : "ok";
	}
	$results{$config}{$type}{$arch} = { ok=>$result_stats->{ok}||0, unknown=>$result_stats->{unk}||0,
					    fail=>$result_stats->{fail}||0, overall=>$overall };
}
my @types = keys %archs;
# Sorting everything
@types = sort @types;
@configs = sort @configs;
for my $type (@types) {
	my @sorted = sort(@{$archs{$type}});
	$archs{$type} = \@sorted;
}

my $mt = Text::MicroTemplate::Extended->new(
	include_path  => ['../htdocs/template'],
	template_args => { build => $build, configs => \@configs, types => \@types, archs => \%archs, results => \%results }
);
print header(-charset=>"UTF-8", -type=>"text/html");
print $mt->render('buildview');
