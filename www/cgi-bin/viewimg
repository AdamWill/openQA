#!/usr/bin/perl -w
use strict;
use CGI ":standard";
use lib "/usr/share/openqa/cgi-bin/modules";
use awstandard;
use openqa;
use Digest::MD5;
use Text::MicroTemplate "encoded_string";
use Text::MicroTemplate::Extended;

my $name=$ENV{PATH_INFO};
if($name=~m/\.\./) {print header(-status=>403)."invalid path"; exit 0; }
$name=~s/\.png$//;
$name=~s/\.jpg$//;

$name=~s/^$prj//;
$name=~s/^\/$prj//;

my $fullname="/$basedir/$prj/$name.ppm";
if (!-e $fullname) {
        $fullname.=".gz";
	if (!-e $fullname) {print header(-status=>404)."file not found: ".$fullname; exit 0; }
}
my(undef,undef,$testname,$imgname) = split(/\//, $name);

sub get_img_details($) {
	my($x)=@_;
	my ($filename,$result)=($x,$x);
	$filename=~s/.*\/(.*)-(\d+)-(\d+)-(.*)\.ppm/$1-$2-$3-$4/;
	$result=~s/.*\/.*-\d+-\d+-(.*)\.ppm/$1/;
	return {name => $filename, result => $result};
}

my @imglist=map {get_img_details($_)} get_testimgs($imgname);

my $imgmd5 = Digest::MD5::md5_hex(file_content($fullname));

my $mt = Text::MicroTemplate::Extended->new(
	include_path  => ['../htdocs/template'],
	template_args => { testname => $testname, imgname => $imgname, imgmd5 => $imgmd5, imglist => \@imglist },
);

print header(-charset=>"UTF-8", -type=>"text/html");
print $mt->render('viewimg');
