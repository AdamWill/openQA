#!/usr/bin/perl -w
use strict;
use CGI ":standard";
use FindBin;
use JSON;
use lib "$FindBin::Bin/modules";
#use Image::Magick;
use awstandard;
use openqa;
use Text::MicroTemplate "encoded_string";
use Text::MicroTemplate::Extended;

my $fn=$ENV{PATH_INFO};
if($fn=~m/\.\./) {print header(-status=>403)."invalid path"; exit 0; }
$fn=~s%^/%%;
my($action,$testname,$testmodule,$testindex) = split(/\//, $fn);

my $results = test_result($testname);
unless ($results) { print header(-status=>404)."no testresults found"; exit 0; }

my $module = test_result_module($results->{'testmodules'}, $testmodule);
unless ($module) { print header(-status=>404)."module not found"; exit 0; }

unless ($testindex =~ m/^\d+$/ && $testindex > 0 && $testindex <= @{$module->{'details'}}) {
	print header(-status=>403)."invalid index"; exit 0;
}

my $module_detail = $module->{'details'}->[$testindex-1];
my $imgname = $module_detail->{'screenshot'};

#FIXME: Show more details about the matches in a mouseover hooked to the rectangle.
# ../htdocs/static/shapes.js might be useful for that

my $areas = [];
if( defined($module_detail->{'area'}) ) {
    $areas = $module_detail->{'area'};
}
elsif( defined($module_detail->{'needles'}) ) {
    my @tmp = map { $_->{'area'}->[0] } @{$module_detail->{'needles'}};
    $areas = \@tmp;
}

#my $fullname="/$basedir/$prj/testresults/$testname/$imgname";
#my $p = new Image::Magick(depth=>8);
#$p->Read($fullname, depth=>8);
#my ($img_width,$img_height) = $p->Get('width','height');
my ($img_width,$img_height) = qw(1024 768);

my $modinfo = get_running_modinfo($results);

my $mt = Text::MicroTemplate::Extended->new(
	include_path  => ['../htdocs/template'],
	template_args => { testname => $testname, testmodule => $testmodule, imgname => $imgname,
                           img_width => $img_width, img_height => $img_height, imgindex => $testindex,
                           imglist => $module->{'details'}, areas => encoded_string(JSON::to_json($areas)),
                           modinfo => $modinfo, action => 'viewimg' });

print header(-charset=>"UTF-8", -type=>"text/html");
print $mt->render('viewimg');
