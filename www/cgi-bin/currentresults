#!/usr/bin/perl -w
use strict;
use CGI ":standard";
use lib "/srv/www/cgi-bin/modules";
use awstandard;
use sort_table;
use openqa;

my $defaulthoursfresh=4*24;


my %options;
for my $p (qw'sort hours') {
   $options{$p}=param($p);
}
#if(!defined $options{sort}){$options{sort}="-5.3.4.-7";} # default sort by Build# descending
if(!defined $options{sort}){$options{sort}="-7";} # default sort by Time descending
my $hoursfresh=($options{hours}+0);
if($hoursfresh<1 || $hoursfresh>300) {$hoursfresh=$defaulthoursfresh}
my $maxage=3600*$hoursfresh;

my $resultdir="$basedir/opensuse/video";
my @list=();
my $now=time();
for my $r (<$resultdir/*.autoinst.txt>) {
	my @s=stat($r);
	my ($logsize,$mtime)=@s[7,9];
	next if $mtime < $now - $maxage; # skip old
	my ($link, $distri, $type, $arch, $build, $extrainfo)=split_filename($r);
	my $parsed=parse_log_to_stats($r);
	if($logsize==0) {
		$link="testing";
		$parsed->{OK}=" ";
	}
#	next if $logsize<100; # too small => bug somewhere
	push(@list, [$link, $distri, $type, $arch, $build, $extrainfo, 
	    $mtime, $parsed->{OK}||0, $parsed->{unknown}||"", $parsed->{fail}||""]);
}

sub resultspan($$) {my ($status,$value)=@_;qq'<span class="overview$_[0]">$_[1]</span>'}

my $table=sort_table(
  [qw(link distr type arch build extra 
      testtime OK unk fail)],
  [\&display_string, undef, \&display_string, \&display_string, \&display_string, \&display_string, 
      \&display_time, sub{resultspan("ok",$_[0])}, sub{resultspan("unknown",$_[0])}, sub{resultspan("fail",$_[0])}],
  [undef, undef, \&sort_string, \&sort_string, \&sort_num, \&sort_string, 
      \&sort_num, \&sort_num, \&sort_num, \&sort_num],
  sort_param_to_keys($options{sort}), \@list
);

my $hoursselect="";

my ($header,$footer)=get_header_footer();
print header("text/html").
$header.
"<p>This tool lists automated test-results from the last $hoursfresh hours. $hoursselect
<br/>".
(scalar @list)." 
results:</p>
<center>
$table
</center>
$footer";

