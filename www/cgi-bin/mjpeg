#!/usr/bin/perl -w
use strict;
use CGI qw":standard";
use Image::Magick;
use Time::HiRes qw(usleep);
use lib "/srv/www/cgi-bin/modules";
use awstandard;
use openqa;

# see http://www.w3.org/Protocols/rfc1341/7_2_Multipart.html

$| = 1;

$SIG{HUP} = sub { exit 0; };
$SIG{TERM} = sub { exit 0; };
$SIG{PIPE} = sub { exit 0; };
our %goodsizes=(1440015=>1, 2359312=>1, 864015=>1);

my $name=$ENV{PATH_INFO};

$name=~s/^\/(.*)/$1/;

my @runner = </space/geekotest/$prj/pool/[0-9]>;
my $basepath = '';
foreach my $path (@runner) {
	my $testfile = $path."/testname";
	my $rnam = file_content($testfile);
	chomp $rnam;
	if ($name eq $rnam) {
		$basepath = $path."/";
		last;
	}
}

if($basepath eq '') {print header(-status=>404)."test not running"; exit 0; }

sub ppm2jpg($) {
  my $p = new Image::Magick(depth=>8);
  my $name = shift;
  $p->Read($name, depth=>8);
  return $p->ImageToBlob(magick=>uc('jpg'), depth=>8, quality=>60);
}

sub png2jpg($) {
  my $p = new Image::Magick(depth=>8);
  my $name = shift;
  $p->Read($name, depth=>8);
  return $p->ImageToBlob(magick=>uc('jpg'), depth=>8, quality=>100);
}

sub waitppmcomplete($)
{
  my $filename = shift;
  for(1..25) {
    my $size=-s $filename;
    if($goodsizes{$size}) {last}
    usleep 20000;
  }
}

print header("multipart/x-mixed-replace;boundary=__myboundary__")."--__myboundary__\015\012";

my $lastfile = '';
my $lastdata = '';
my $donetimeout = 0;
while (1) {
  my @ppmfiles=<$basepath/qemuscreenshot/*.ppm>;
  my $newfile = ($ppmfiles[-1])?$ppmfiles[-1]:$lastfile;
  if ($lastfile ne $newfile) {
    waitppmcomplete($newfile);
    my $data=file_content($newfile);
    if($data ne $lastdata) {
      my $p = new Image::Magick(depth=>8, magick=>"PPM");
      $p->BlobToImage($data);
      my $jpg=$p->ImageToBlob(magick=>'JPEG', depth=>8, quality=>60);
#     my $jpg=ppm2jpg($newfile);
      my $jpgsize=length($jpg);
      print "Content-Type: image/jpeg\015\012Content-Size: $jpgsize\015\012\015\012".$jpg."\015\012--__myboundary__\015\012";
      $lastdata = $data;
    }
    $lastfile = $ppmfiles[-1];
    $donetimeout = 0;
  }
  else {
    usleep(200000);
    if ($lastfile ne '') {
      $donetimeout++;
      if($donetimeout > 15) {
        print "X-NoKeepAlive: This message will trigger SIGPIPE in the CGI if you close the page in your browser\015\012";
        $donetimeout = 0;
        if(! -e $basepath."qemu.pid") {
          my $png=file_content("../htdocs/images/suse-tested.png");
          my $pngsize=length($png);
          print "Content-Type: image/png\015\012Content-Size: $pngsize\015\012\015\012$png\015\012--__myboundary__--\015\012";
          exit 0;
        }
      }
    }
  }
  usleep(200000);
}
exit 0;

